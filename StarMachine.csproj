<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <PublishAot>true</PublishAot>
    <InvariantGlobalization>true</InvariantGlobalization>
    <StartupObject>StarMachine.Program</StartupObject>
    <ApplicationIcon>star_machine.ico</ApplicationIcon>
    <PlatformTarget>x64</PlatformTarget>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <SignAssembly>False</SignAssembly>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <Optimize>False</Optimize>
    <DebugType>embedded</DebugType>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="star_machine.ico" />
  </ItemGroup>

  <ItemGroup>
    <None Include="app.config">
      <Link>$(TargetFileName).config</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="star_machine.bmp" />
    <EmbeddedResource Include="third_party/*/*.ttf" />
    <EmbeddedResource Include="third_party/*/*.svg" />
    <EmbeddedResource Include="svg/*_dial.svg" />
    <EmbeddedResource Include="svg/*_needle.svg" />
    <EmbeddedResource Include="svg/*_shadow.svg" />
  </ItemGroup>

  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <ShaderCompiler>third_party\glslang\glslangValidator.exe</ShaderCompiler>
  </PropertyGroup>

  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <ShaderCompiler>glslangValidator</ShaderCompiler>
  </PropertyGroup>

  <PropertyGroup>
    <CommonShaderArgs>--enhanced-msgs --nan-clamp -g -V -e main</CommonShaderArgs>
  </PropertyGroup>

  <ItemGroup>
    <Shader Include="star_machine/*.glsl">
      <Name>$([System.Text.RegularExpressions.Regex]::Match(%(Identity), '((?:\w|\.|_)+)(?=\.(?:vs|fs)\.glsl$)'))</Name>
      <Stage>$([System.Text.RegularExpressions.Regex]::Match(%(Identity), '(vs|fs)(?=\.glsl$)'))</Stage>
      <OutFile Condition="%(Name) != '' And %(Stage) != ''">%(Name).%(Stage).spirv</OutFile>
      <CompileCommand Condition="%(Stage) == 'vs'">$(ShaderCompiler) $(CommonShaderArgs) -S vert -o %(OutFile) %(Identity)</CompileCommand>
      <CompileCommand Condition="%(Stage) == 'fs'">$(ShaderCompiler) $(CommonShaderArgs) -S frag -o %(OutFile) %(Identity)</CompileCommand>
    </Shader>
  </ItemGroup>

  <Target Name="CompileShaders" BeforeTargets="ResolveReferences"
    Inputs="@(Shader)"
    Outputs="%(Shader.OutFile)">
    <Exec Command="%(Shader.CompileCommand)" />
    <ItemGroup>
      <EmbeddedResource Include="%(Shader.OutFile)" />
    </ItemGroup>
  </Target>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <ThirdPartyDLLs Include="third_party\**\*.dll" />
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <ThirdPartyDLLs Include="../sdl3gpu/SDL/build/libSDL3.so" />
    <ThirdPartyDLLs Include="../plutovg/build/libplutovg.so" />
    <ThirdPartyDLLs Include="../plutosvg/build/libplutosvg.so" />
  </ItemGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Copy SourceFiles="@(ThirdPartyDLLs)" DestinationFolder="$(TargetDir)" />
    <Move SourceFiles="$(TargetDir)\libplutovg.so" DestinationFiles="$(TargetDir)\plutovg-0.so" Condition="$([MSBuild]::IsOSPlatform('Linux'))" />
    <Move SourceFiles="$(TargetDir)\libplutosvg.so" DestinationFiles="$(TargetDir)\plutosvg-0.so" Condition="$([MSBuild]::IsOSPlatform('Linux'))" />
  </Target>

  <Target Name="PostPublish" AfterTargets="Publish">
    <Copy SourceFiles="@(ThirdPartyDLLs)" DestinationFolder="$(PublishDir)" />
    <Move SourceFiles="$(PublishDir)\libplutovg.so" DestinationFiles="$(PublishDir)\plutovg-0.so" Condition="$([MSBuild]::IsOSPlatform('Linux'))" />
    <Move SourceFiles="$(PublishDir)\libplutosvg.so" DestinationFiles="$(PublishDir)\plutosvg-0.so" Condition="$([MSBuild]::IsOSPlatform('Linux'))" />
  </Target>

</Project>
